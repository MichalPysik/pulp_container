{
    "openapi": "3.0.3",
    "info": {
        "title": "Pulp 3 API",
        "version": "v3",
        "description": "Fetch, Upload, Organize, and Distribute Software Packages",
        "contact": {
            "name": "Pulp Team",
            "email": "pulp-list@redhat.com",
            "url": "https://pulpproject.org"
        },
        "license": {
            "name": "GPLv2+",
            "url": "https://raw.githubusercontent.com/pulp/pulpcore/master/LICENSE"
        },
        "x-logo": {
            "url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"
        }
    },
    "paths": {
        "/pulp/api/v3/artifacts/": {
            "get": {
                "operationId": "pulp_api_v3_artifacts_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "md5",
                        "required": false,
                        "in": "query",
                        "description": "md5",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sha1",
                        "required": false,
                        "in": "query",
                        "description": "sha1",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sha224",
                        "required": false,
                        "in": "query",
                        "description": "sha224",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sha256",
                        "required": false,
                        "in": "query",
                        "description": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sha384",
                        "required": false,
                        "in": "query",
                        "description": "sha384",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sha512",
                        "required": false,
                        "in": "query",
                        "description": "sha512",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ArtifactResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_artifacts_create",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "tags": [
                    "Artifacts"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Artifact"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{artifact_href}": {
            "get": {
                "operationId": "read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ArtifactResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Remove Artifact only if it is not associated with any Content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artifact_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Artifacts"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/content/container/blobs/": {
            "get": {
                "operationId": "pulp_api_v3_content_container_blobs_list",
                "description": "ViewSet for Blobs.",
                "parameters": [
                    {
                        "name": "digest",
                        "required": false,
                        "in": "query",
                        "description": "digest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "digest__in",
                        "required": false,
                        "in": "query",
                        "description": "digest__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "media_type",
                        "required": false,
                        "in": "query",
                        "description": "media_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/vnd.docker.container.image.v1+json",
                                "application/vnd.docker.image.rootfs.diff.tar.gzip",
                                "application/vnd.docker.image.rootfs.foreign.diff.tar.gzip",
                                "application/vnd.oci.image.config.v1+json",
                                "application/vnd.oci.image.layer.v1.tar+gzip",
                                "application/vnd.oci.image.layer.nondistributable.v1.tar+gzip"
                            ]
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_added",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_removed",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Blobs"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/container.BlobResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{blob_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for Blobs.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "blob_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Blobs"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.BlobResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/container/manifests/": {
            "get": {
                "operationId": "pulp_api_v3_content_container_manifests_list",
                "description": "ViewSet for Manifest.",
                "parameters": [
                    {
                        "name": "digest",
                        "required": false,
                        "in": "query",
                        "description": "digest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "digest__in",
                        "required": false,
                        "in": "query",
                        "description": "digest__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "media_type",
                        "required": false,
                        "in": "query",
                        "description": "media_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/vnd.docker.distribution.manifest.v1+json",
                                "application/vnd.docker.distribution.manifest.v2+json",
                                "application/vnd.docker.distribution.manifest.list.v2+json",
                                "application/vnd.oci.image.manifest.v1+json",
                                "application/vnd.oci.image.index.v1+json"
                            ]
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_added",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_removed",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Manifests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/container.ManifestResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{manifest_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for Manifest.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "manifest_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Manifests"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ManifestResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/container/tags/": {
            "get": {
                "operationId": "pulp_api_v3_content_container_tags_list",
                "description": "ViewSet for Tag.",
                "parameters": [
                    {
                        "name": "digest",
                        "required": false,
                        "in": "query",
                        "description": "digest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "media_type",
                        "required": false,
                        "in": "query",
                        "description": "media_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/vnd.docker.distribution.manifest.v1+json",
                                "application/vnd.docker.distribution.manifest.v2+json",
                                "application/vnd.docker.distribution.manifest.list.v2+json",
                                "application/vnd.oci.image.manifest.v1+json",
                                "application/vnd.oci.image.index.v1+json"
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_added",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_removed",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Tags"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/container.TagResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{tag_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for Tag.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "tag_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Tags"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.TagResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/file/files/": {
            "get": {
                "operationId": "pulp_api_v3_content_file_files_list",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relative_path",
                        "required": false,
                        "in": "query",
                        "description": "relative_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_added",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_removed",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sha256",
                        "required": false,
                        "in": "query",
                        "description": "sha256",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Files"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/file.FileContentResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_content_file_files_create",
                "description": "Trigger an asynchronous task to create content,optionally create new repository version.",
                "tags": [
                    "Content: Files"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_content_href}": {
            "get": {
                "operationId": "read",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileContent represents a single file and its metadata, which can be added and removed from\nrepositories.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_content_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Files"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileContentResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/contentguards/container/content_redirect/": {
            "get": {
                "operationId": "pulp_api_v3_contentguards_container_content_redirect_list",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/container.ContentRedirectContentGuardResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_contentguards_container_content_redirect_create",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{content_redirect_content_guard_href}": {
            "get": {
                "operationId": "read",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContentRedirectContentGuard"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContentRedirectContentGuard"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContentRedirectContentGuard"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContentRedirectContentGuardResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Content guard to protect preauthenticated redirects to the content app.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "content_redirect_content_guard_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Contentguards: Content_Redirect"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/container/container/": {
            "get": {
                "operationId": "pulp_api_v3_distributions_container_container_list",
                "description": "The Container Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Container Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Container\nDistribution, but not both.",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/container.ContainerDistributionResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_distributions_container_container_create",
                "description": "Trigger an asynchronous create task",
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_distribution_href}": {
            "get": {
                "operationId": "read",
                "description": "The Container Distribution will serve the latest version of a Repository if\n``repository`` is specified. The Container Distribution will serve a specific\nrepository version if ``repository_version``. Note that **either**\n``repository`` or ``repository_version`` can be set on a Container\nDistribution, but not both.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "Trigger an asynchronous partial update task",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "container_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Distributions: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/file/file/": {
            "get": {
                "operationId": "pulp_api_v3_distributions_file_file_list",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileDistributions host <a href=\"#operation/publications_file_file_list\">File\nPublications</a> which makes the metadata and the referenced <a\nhref=\"#operation/content_file_files_list\">File Content</a> available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a <a href=\"#operation/remotes_file_file_list\">File Remote</a> , allowing\nanother instance of Pulp to sync the content.",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/file.FileDistributionResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_distributions_file_file_create",
                "description": "Trigger an asynchronous create task",
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_distribution_href}": {
            "get": {
                "operationId": "read",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileDistributions host <a href=\"#operation/publications_file_file_list\">File\nPublications</a> which makes the metadata and the referenced <a\nhref=\"#operation/content_file_files_list\">File Content</a> available to HTTP\nclients. Additionally, a FileDistribution with an associated FilePublication can be the target\nurl of a <a href=\"#operation/remotes_file_file_list\">File Remote</a> , allowing\nanother instance of Pulp to sync the content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "Trigger an asynchronous partial update task",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "file_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Distributions: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/exporters/core/pulp/": {
            "get": {
                "operationId": "pulp_api_v3_exporters_core_pulp_list",
                "description": "ViewSet for viewing PulpExporters.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PulpExporterResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_exporters_core_pulp_create",
                "description": "ViewSet for viewing PulpExporters.",
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_export_href}exports/": {
            "get": {
                "operationId": "list",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Core Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PulpExportResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to export a set of repositories",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Core Exports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_export_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Core Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "ViewSet for viewing exports from a PulpExporter.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Core Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{pulp_exporter_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for viewing PulpExporters.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "ViewSet for viewing PulpExporters.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "ViewSet for viewing PulpExporters.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "ViewSet for viewing PulpExporters.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/exporters/file/filesystem/": {
            "get": {
                "operationId": "pulp_api_v3_exporters_file_filesystem_list",
                "description": "FilesystemExporters export content from a publication to a path on the file system.\n\nWARNING: This feature is provided as a tech preview and may change in the future. Backwards\ncompatibility is not guaranteed.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/file.FileFilesystemExporterResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_exporters_file_filesystem_create",
                "description": "FilesystemExporters export content from a publication to a path on the file system.\n\nWARNING: This feature is provided as a tech preview and may change in the future. Backwards\ncompatibility is not guaranteed.",
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileFilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileFilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileFilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileFilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{export_href}exports/": {
            "get": {
                "operationId": "list",
                "description": "FilesystemExports provide a history of previous exports.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: File Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ExportResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create",
                "description": "Export a publication to the file system.\n\nThe ``repository`` field has to be provided.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: File Exports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Export"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Export"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Export"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{export_href}": {
            "get": {
                "operationId": "read",
                "description": "FilesystemExports provide a history of previous exports.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: File Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "FilesystemExports provide a history of previous exports.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "export_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: File Exports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{file_filesystem_exporter_href}": {
            "get": {
                "operationId": "read",
                "description": "FilesystemExporters export content from a publication to a path on the file system.\n\nWARNING: This feature is provided as a tech preview and may change in the future. Backwards\ncompatibility is not guaranteed.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileFilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "FilesystemExporters export content from a publication to a path on the file system.\n\nWARNING: This feature is provided as a tech preview and may change in the future. Backwards\ncompatibility is not guaranteed.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileFilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileFilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileFilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileFilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "FilesystemExporters export content from a publication to a path on the file system.\n\nWARNING: This feature is provided as a tech preview and may change in the future. Backwards\ncompatibility is not guaranteed.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileFilesystemExporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileFilesystemExporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileFilesystemExporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileFilesystemExporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "FilesystemExporters export content from a publication to a path on the file system.\n\nWARNING: This feature is provided as a tech preview and may change in the future. Backwards\ncompatibility is not guaranteed.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_filesystem_exporter_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Exporters: Filesystem"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/importers/core/pulp/": {
            "get": {
                "operationId": "pulp_api_v3_importers_core_pulp_list",
                "description": "ViewSet for PulpImporters.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PulpImporterResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_importers_core_pulp_create",
                "description": "ViewSet for PulpImporters.",
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_import_href}imports/": {
            "get": {
                "operationId": "list",
                "description": "ViewSet for PulpImports.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Core Imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ImportResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to import a Pulp export.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Core Imports"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImport"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{pulp_import_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for PulpImports.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Core Imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ImportResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "ViewSet for PulpImports.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Core Imports"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{pulp_importer_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for PulpImporters.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "ViewSet for PulpImporters.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "ViewSet for PulpImporters.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPulpImporter"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PulpImporterResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "ViewSet for PulpImporters.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "pulp_importer_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Importers: Pulp"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/publications/file/file/": {
            "get": {
                "operationId": "pulp_api_v3_publications_file_file_list",
                "description": "<!-- User-facing documentation, rendered as html-->\nA FilePublication contains metadata about all the <a\nhref=\"#operation/content_file_files_list\">File Content</a> in a particular <a\nhref=\"href=\"#tag/repositories:-file-versions\">File Repository Version.</a>\nOnce a FilePublication has been created, it can be hosted using the\n<a href=\"#operation/distributions_file_file_list\">File Distribution API.</a>",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/file.FilePublicationResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_publications_file_file_create",
                "description": "Publishes a repository.\n\nEither the ``repository`` or the ``repository_version`` fields can\nbe provided but not both at the same time.",
                "tags": [
                    "Publications: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FilePublication"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FilePublicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_publication_href}": {
            "get": {
                "operationId": "read",
                "description": "<!-- User-facing documentation, rendered as html-->\nA FilePublication contains metadata about all the <a\nhref=\"#operation/content_file_files_list\">File Content</a> in a particular <a\nhref=\"href=\"#tag/repositories:-file-versions\">File Repository Version.</a>\nOnce a FilePublication has been created, it can be hosted using the\n<a href=\"#operation/distributions_file_file_list\">File Distribution API.</a>",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FilePublicationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "<!-- User-facing documentation, rendered as html-->\nA FilePublication contains metadata about all the <a\nhref=\"#operation/content_file_files_list\">File Content</a> in a particular <a\nhref=\"href=\"#tag/repositories:-file-versions\">File Repository Version.</a>\nOnce a FilePublication has been created, it can be hosted using the\n<a href=\"#operation/distributions_file_file_list\">File Distribution API.</a>",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_publication_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Publications: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/container/container/": {
            "get": {
                "operationId": "pulp_api_v3_remotes_container_container_list",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_remotes_container_container_create",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_remote_href}": {
            "get": {
                "operationId": "read",
                "description": "Container remotes represent an external repository that implements the Container\nRegistry API. Container remotes support deferred downloading by configuring\nthe ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide\nsignificant disk space savings.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "Trigger an asynchronous partial update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Remotes: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/file/file/": {
            "get": {
                "operationId": "pulp_api_v3_remotes_file_file_list",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileRemote represents an external source of <a href=\"#operation/content_file_files_list\">File\nContent</a>.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/file.FileRemoteResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_remotes_file_file_create",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileRemote represents an external source of <a href=\"#operation/content_file_files_list\">File\nContent</a>.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_remote_href}": {
            "get": {
                "operationId": "read",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileRemote represents an external source of <a href=\"#operation/content_file_files_list\">File\nContent</a>.  The target url of a FileRemote must contain a file manifest, which contains the\nmetadata for all files at the source.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "Trigger an asynchronous partial update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Remotes: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/container/container/": {
            "get": {
                "operationId": "pulp_api_v3_repositories_container_container_list",
                "description": "ViewSet for container repo.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_repositories_container_container_create",
                "description": "ViewSet for container repo.",
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/container/container-push/": {
            "get": {
                "operationId": "pulp_api_v3_repositories_container_container_push_list",
                "description": "ViewSet for container push repository.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/container.ContainerPushRepositoryResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_repositories_container_container_push_create",
                "description": "ViewSet for container push repository.",
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPushRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_push_repository_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for container push repository.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerPushRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerPushRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "Trigger an asynchronous partial update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerPushRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_push_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: Container-Push"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container-push_repository_version_href}versions/": {
            "get": {
                "operationId": "list",
                "description": "ContainerPushRepositoryVersion represents a single container push repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container-push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "content",
                        "required": false,
                        "in": "query",
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content__in",
                        "required": false,
                        "in": "query",
                        "description": "content__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "number",
                        "required": false,
                        "in": "query",
                        "description": "number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gt",
                        "required": false,
                        "in": "query",
                        "description": "number__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gte",
                        "required": false,
                        "in": "query",
                        "description": "number__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lt",
                        "required": false,
                        "in": "query",
                        "description": "number__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lte",
                        "required": false,
                        "in": "query",
                        "description": "number__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__range",
                        "required": false,
                        "in": "query",
                        "description": "number__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RepositoryVersionResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container-push_repository_version_href}": {
            "get": {
                "operationId": "read",
                "description": "ContainerPushRepositoryVersion represents a single container push repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container-push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous task to delete a repositroy version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container-push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "content",
                        "required": false,
                        "in": "query",
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content__in",
                        "required": false,
                        "in": "query",
                        "description": "content__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number",
                        "required": false,
                        "in": "query",
                        "description": "number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gt",
                        "required": false,
                        "in": "query",
                        "description": "number__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gte",
                        "required": false,
                        "in": "query",
                        "description": "number__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lt",
                        "required": false,
                        "in": "query",
                        "description": "number__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lte",
                        "required": false,
                        "in": "query",
                        "description": "number__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__range",
                        "required": false,
                        "in": "query",
                        "description": "number__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container-push_repository_version_href}repair/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to repair a repositroy version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container-push_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}": {
            "get": {
                "operationId": "read",
                "description": "ViewSet for container repo.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/container.ContainerRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/container.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "Trigger an asynchronous partial update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedcontainer.ContainerRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}add/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to recursively add container content.",
                "summary": "Add content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}build_image/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to build an OCI image from a Containerfile. A new repository version is created with the new image and tag. This API is tech preview in Pulp Container 1.1. Backwards compatibility when upgrading is not guaranteed.",
                "summary": "Build an Image",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OCIBuildImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OCIBuildImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}copy_manifests/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to copy manifests",
                "summary": "Copy manifests",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ManifestCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}copy_tags/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to copy tags",
                "summary": "Copy tags",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagCopy"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}remove/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an async task to recursively remove container content.",
                "summary": "Remove content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RecursiveManage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}sync/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to sync content.",
                "summary": "Sync from a remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}tag/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to tag an image in the repository",
                "summary": "Create a Tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_href}untag/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to untag an image in the repository",
                "summary": "Delete a tag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UnTagImage"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_version_href}versions/": {
            "get": {
                "operationId": "list",
                "description": "ContainerRepositoryVersion represents a single container repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "content",
                        "required": false,
                        "in": "query",
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content__in",
                        "required": false,
                        "in": "query",
                        "description": "content__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "number",
                        "required": false,
                        "in": "query",
                        "description": "number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gt",
                        "required": false,
                        "in": "query",
                        "description": "number__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gte",
                        "required": false,
                        "in": "query",
                        "description": "number__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lt",
                        "required": false,
                        "in": "query",
                        "description": "number__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lte",
                        "required": false,
                        "in": "query",
                        "description": "number__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__range",
                        "required": false,
                        "in": "query",
                        "description": "number__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RepositoryVersionResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_version_href}": {
            "get": {
                "operationId": "read",
                "description": "ContainerRepositoryVersion represents a single container repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous task to delete a repositroy version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "content",
                        "required": false,
                        "in": "query",
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content__in",
                        "required": false,
                        "in": "query",
                        "description": "content__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number",
                        "required": false,
                        "in": "query",
                        "description": "number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gt",
                        "required": false,
                        "in": "query",
                        "description": "number__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gte",
                        "required": false,
                        "in": "query",
                        "description": "number__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lt",
                        "required": false,
                        "in": "query",
                        "description": "number__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lte",
                        "required": false,
                        "in": "query",
                        "description": "number__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__range",
                        "required": false,
                        "in": "query",
                        "description": "number__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{container_repository_version_href}repair/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to repair a repositroy version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "container_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Container Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/file/file/": {
            "get": {
                "operationId": "pulp_api_v3_repositories_file_file_list",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/file.FileRepositoryResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_repositories_file_file_create",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_repository_href}": {
            "get": {
                "operationId": "read",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileRepository represents a single file repository, to which content can be synced, added,\nor removed.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/file.FileRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Trigger an asynchronous update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/file.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partial_update",
                "description": "Trigger an asynchronous partial update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedfile.FileRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_repository_href}modify/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_repository_href}sync/": {
            "post": {
                "operationId": "create",
                "description": "Synchronizes a repository.\n\nThe ``repository`` field has to be provided.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositorySyncURLResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_repository_version_href}versions/": {
            "get": {
                "operationId": "list",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileRepositoryVersion represents a single file repository version.",
                "parameters": [
                    {
                        "name": "content",
                        "required": false,
                        "in": "query",
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content__in",
                        "required": false,
                        "in": "query",
                        "description": "content__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "number",
                        "required": false,
                        "in": "query",
                        "description": "number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gt",
                        "required": false,
                        "in": "query",
                        "description": "number__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gte",
                        "required": false,
                        "in": "query",
                        "description": "number__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lt",
                        "required": false,
                        "in": "query",
                        "description": "number__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lte",
                        "required": false,
                        "in": "query",
                        "description": "number__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__range",
                        "required": false,
                        "in": "query",
                        "description": "number__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RepositoryVersionResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_repository_version_href}": {
            "get": {
                "operationId": "read",
                "description": "<!-- User-facing documentation, rendered as html-->\nFileRepositoryVersion represents a single file repository version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "Trigger an asynchronous task to delete a repositroy version.",
                "parameters": [
                    {
                        "name": "content",
                        "required": false,
                        "in": "query",
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content__in",
                        "required": false,
                        "in": "query",
                        "description": "content__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "number",
                        "required": false,
                        "in": "query",
                        "description": "number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gt",
                        "required": false,
                        "in": "query",
                        "description": "number__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gte",
                        "required": false,
                        "in": "query",
                        "description": "number__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lt",
                        "required": false,
                        "in": "query",
                        "description": "number__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lte",
                        "required": false,
                        "in": "query",
                        "description": "number__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__range",
                        "required": false,
                        "in": "query",
                        "description": "number__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{file_repository_version_href}repair/": {
            "post": {
                "operationId": "create",
                "description": "Trigger an asynchronous task to repair a repositroy version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "file_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: File Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/signing-services/": {
            "get": {
                "operationId": "pulp_api_v3_signing_services_list",
                "description": "A ViewSet that supports browsing of existing signing services.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Signing-Services"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SigningServiceResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{signing_service_href}": {
            "get": {
                "operationId": "read",
                "description": "A ViewSet that supports browsing of existing signing services.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "signing_service_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Signing-Services"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SigningServiceResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/task-groups/": {
            "get": {
                "operationId": "pulp_api_v3_task_groups_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaskGroupResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_group_href}": {
            "get": {
                "operationId": "read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_group_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Task-Groups"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskGroupResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/tasks/": {
            "get": {
                "operationId": "pulp_api_v3_tasks_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "name": "child_tasks",
                        "required": false,
                        "in": "query",
                        "description": "child_tasks",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_resources",
                        "required": false,
                        "in": "query",
                        "description": "created_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at",
                        "required": false,
                        "in": "query",
                        "description": "finished_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__gt",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__gte",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__lt",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__lte",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__range",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__contains",
                        "required": false,
                        "in": "query",
                        "description": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_task",
                        "required": false,
                        "in": "query",
                        "description": "parent_task",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reserved_resources_record",
                        "required": false,
                        "in": "query",
                        "description": "reserved_resources_record",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at",
                        "required": false,
                        "in": "query",
                        "description": "started_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__gt",
                        "required": false,
                        "in": "query",
                        "description": "started_at__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__gte",
                        "required": false,
                        "in": "query",
                        "description": "started_at__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__lt",
                        "required": false,
                        "in": "query",
                        "description": "started_at__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__lte",
                        "required": false,
                        "in": "query",
                        "description": "started_at__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__range",
                        "required": false,
                        "in": "query",
                        "description": "started_at__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "required": false,
                        "in": "query",
                        "description": "state",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state__in",
                        "required": false,
                        "in": "query",
                        "description": "state__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "task_group",
                        "required": false,
                        "in": "query",
                        "description": "task_group",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker",
                        "required": false,
                        "in": "query",
                        "description": "worker",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker__in",
                        "required": false,
                        "in": "query",
                        "description": "worker__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaskResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{task_href}": {
            "get": {
                "operationId": "read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "tasks_cancel",
                "description": "This operation cancels a task.",
                "summary": "Cancel a task",
                "parameters": [
                    {
                        "name": "child_tasks",
                        "required": false,
                        "in": "query",
                        "description": "child_tasks",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "created_resources",
                        "required": false,
                        "in": "query",
                        "description": "created_resources",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at",
                        "required": false,
                        "in": "query",
                        "description": "finished_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__gt",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__gte",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__lt",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__lte",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "finished_at__range",
                        "required": false,
                        "in": "query",
                        "description": "finished_at__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__contains",
                        "required": false,
                        "in": "query",
                        "description": "name__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent_task",
                        "required": false,
                        "in": "query",
                        "description": "parent_task",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reserved_resources_record",
                        "required": false,
                        "in": "query",
                        "description": "reserved_resources_record",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at",
                        "required": false,
                        "in": "query",
                        "description": "started_at",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__gt",
                        "required": false,
                        "in": "query",
                        "description": "started_at__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__gte",
                        "required": false,
                        "in": "query",
                        "description": "started_at__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__lt",
                        "required": false,
                        "in": "query",
                        "description": "started_at__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__lte",
                        "required": false,
                        "in": "query",
                        "description": "started_at__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "started_at__range",
                        "required": false,
                        "in": "query",
                        "description": "started_at__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state",
                        "required": false,
                        "in": "query",
                        "description": "state",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "state__in",
                        "required": false,
                        "in": "query",
                        "description": "state__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "task_group",
                        "required": false,
                        "in": "query",
                        "description": "task_group",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "worker",
                        "required": false,
                        "in": "query",
                        "description": "worker",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "worker__in",
                        "required": false,
                        "in": "query",
                        "description": "worker__in",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTaskCancel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "task_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Tasks"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp/api/v3/uploads/": {
            "get": {
                "operationId": "pulp_api_v3_uploads_list",
                "description": "View for chunked uploads.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UploadResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "pulp_api_v3_uploads_create",
                "description": "View for chunked uploads.",
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Upload"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{upload_href}": {
            "get": {
                "operationId": "read",
                "description": "View for chunked uploads.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update",
                "description": "Upload a chunk for an upload.",
                "summary": "Upload a file chunk",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Content-Range",
                        "schema": {
                            "type": "string"
                        },
                        "description": "The Content-Range header specifies the location of the file chunk within the file.",
                        "required": true
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadChunk"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadChunk"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete",
                "description": "View for chunked uploads.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{upload_href}commit/": {
            "post": {
                "operationId": "create",
                "description": "Queues a Task that creates an Artifact, and the Upload gets deleted and cannot be re-used.",
                "summary": "Finish an Upload",
                "parameters": [
                    {
                        "in": "path",
                        "name": "upload_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Uploads"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCommit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/workers/": {
            "get": {
                "operationId": "pulp_api_v3_workers_list",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "name": "last_heartbeat",
                        "required": false,
                        "in": "query",
                        "description": "last_heartbeat",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_heartbeat__gt",
                        "required": false,
                        "in": "query",
                        "description": "last_heartbeat__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_heartbeat__gte",
                        "required": false,
                        "in": "query",
                        "description": "last_heartbeat__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_heartbeat__lt",
                        "required": false,
                        "in": "query",
                        "description": "last_heartbeat__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_heartbeat__lte",
                        "required": false,
                        "in": "query",
                        "description": "last_heartbeat__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "last_heartbeat__range",
                        "required": false,
                        "in": "query",
                        "description": "last_heartbeat__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "missing",
                        "required": false,
                        "in": "query",
                        "description": "missing",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "online",
                        "required": false,
                        "in": "query",
                        "description": "online",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Workers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "count": {
                                            "type": "integer",
                                            "example": 123
                                        },
                                        "next": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "previous": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/WorkerResponse"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{worker_href}": {
            "get": {
                "operationId": "read",
                "description": "A customized named ModelViewSet that knows how to register itself with the Pulp API router.\n\nThis viewset is discoverable by its name.\n\"Normal\" Django Models and Master/Detail models are supported by the ``register_with`` method.\n\nAttributes:\n    lookup_field (str): The name of the field by which an object should be looked up, in\n        addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'\n    endpoint_name (str): The name of the final path segment that should identify the ViewSet's\n        collection endpoint.\n    nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must\n        correspond to the \"parent_prefix\" of a router with rest_framework_nested.NestedMixin.\n        None indicates this ViewSet should not be nested.\n    parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs\n        to django model filter expressions that can be used with the corresponding value from\n        self.kwargs, used only by a nested ViewSet to filter based on the parent object's\n        identity.\n    schema (DefaultSchema): The schema class to use by default in a viewset.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "worker_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Workers"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkerResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Artifact": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true,
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "ArtifactResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "file": {
                        "type": "string",
                        "description": "The stored file."
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the file in bytes."
                    },
                    "md5": {
                        "type": "string",
                        "nullable": true,
                        "description": "The MD5 checksum of the file if available."
                    },
                    "sha1": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-1 checksum of the file if available."
                    },
                    "sha224": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-224 checksum of the file if available."
                    },
                    "sha256": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-256 checksum of the file if available."
                    },
                    "sha384": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-384 checksum of the file if available."
                    },
                    "sha512": {
                        "type": "string",
                        "nullable": true,
                        "description": "The SHA-512 checksum of the file if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "AsyncOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task."
                    }
                },
                "required": [
                    "task"
                ]
            },
            "ContentSummary": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object"
                    },
                    "removed": {
                        "type": "object"
                    },
                    "present": {
                        "type": "object"
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "ContentSummaryResponse": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object"
                    },
                    "removed": {
                        "type": "object"
                    },
                    "present": {
                        "type": "object"
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "Export": {
                "type": "object",
                "description": "Base serializer for Exports.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    }
                }
            },
            "ExportResponse": {
                "type": "object",
                "description": "Base serializer for Exports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "exported_resources": {
                        "type": "array",
                        "items": {},
                        "readOnly": true,
                        "description": "Resources that were exported."
                    },
                    "params": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Any additional parameters that were used to create the export."
                    }
                }
            },
            "GroupProgressReportResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The message shown to the user for the group progress report."
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Identifies the type of group progress report'."
                    },
                    "total": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total count of items."
                    },
                    "done": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The count of items already processed. Defaults to 0."
                    },
                    "suffix": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The suffix to be shown with the group progress report."
                    }
                }
            },
            "ImportResponse": {
                "type": "object",
                "description": "Serializer for Imports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the Task that ran the Import."
                    },
                    "params": {
                        "type": "object",
                        "description": "Any parameters that were used to create the import."
                    }
                },
                "required": [
                    "params",
                    "task"
                ]
            },
            "ManifestCopy": {
                "type": "object",
                "description": "Serializer for copying manifests from a source repository to a destination repository.",
                "properties": {
                    "source_repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to copy content from."
                    },
                    "source_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository version to copy content from."
                    },
                    "digests": {
                        "type": "array",
                        "items": {},
                        "description": "A list of manifest digests to copy."
                    },
                    "media_types": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "application/vnd.docker.distribution.manifest.v1+json",
                                "application/vnd.docker.distribution.manifest.v2+json",
                                "application/vnd.docker.distribution.manifest.list.v2+json",
                                "application/vnd.oci.image.manifest.v1+json",
                                "application/vnd.oci.image.index.v1+json"
                            ],
                            "type": "string"
                        },
                        "description": "A list of media_types to copy."
                    }
                }
            },
            "OCIBuildImage": {
                "type": "object",
                "description": "Serializer for building an OCI container image from a Containerfile.\n\nThe Containerfile can either be specified via an artifact url, or a new file can be uploaded.\nA repository must be specified, to which the container image content will be added.",
                "properties": {
                    "containerfile_artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact representing the Containerfile that should be used to run buildah."
                    },
                    "containerfile": {
                        "type": "string",
                        "format": "binary",
                        "description": "An uploaded Containerfile that should be used to run buildah."
                    },
                    "tag": {
                        "type": "string",
                        "default": "latest",
                        "description": "A tag name for the new image being built."
                    },
                    "artifacts": {
                        "type": "object",
                        "description": "A JSON string where each key is an artifact href and the value is it's relative path (name) inside the /pulp_working_directory of the build container executing the Containerfile."
                    }
                }
            },
            "PatchedPulpExporter": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                }
            },
            "PatchedPulpImporter": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                }
            },
            "PatchedTaskCancel": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "state": {
                        "type": "string",
                        "description": "The desired state of the task. Only 'canceled' is accepted."
                    }
                }
            },
            "Patchedcontainer.ContainerDistribution": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                }
            },
            "Patchedcontainer.ContainerPushRepository": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                }
            },
            "Patchedcontainer.ContainerRemote": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "\n        immediate - All manifests and blobs are downloaded and saved during a sync.\n        on_demand - Only tags and manifests are downloaded. Blobs are not\n                    downloaded until they are requested for the first time by a client.\n        streamed - Blobs are streamed to the client with every request and never saved.\n        "
                    },
                    "upstream_name": {
                        "type": "string",
                        "description": "Name of the upstream repository"
                    },
                    "whitelist_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true,
                        "description": "A list of whitelisted tags to sync"
                    }
                }
            },
            "Patchedcontainer.ContainerRepository": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                }
            },
            "Patchedcontainer.ContentRedirectContentGuard": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                }
            },
            "Patchedfile.FileDistribution": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                }
            },
            "Patchedfile.FileFilesystemExporter": {
                "type": "object",
                "description": "Serializer for File file system exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system location to export to."
                    }
                }
            },
            "Patchedfile.FileRemote": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default."
                    }
                }
            },
            "Patchedfile.FileRepository": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                }
            },
            "PolicyEnum": {
                "enum": [
                    "immediate",
                    "on_demand",
                    "streamed"
                ],
                "type": "string"
            },
            "ProgressReportResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "message": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The message shown to the user for the progress report."
                    },
                    "code": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Identifies the type of progress report'."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the progress report. The possible values are: 'waiting', 'skipped', 'running', 'completed', 'failed' and 'canceled'. The default is 'waiting'."
                    },
                    "total": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The total count of items."
                    },
                    "done": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The count of items already processed. Defaults to 0."
                    },
                    "suffix": {
                        "type": "string",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The suffix to be shown with the progress report."
                    }
                }
            },
            "PulpExport": {
                "type": "object",
                "description": "Serializer for PulpExports.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "full": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": true,
                        "description": "Do a Full (true) or Incremental (false) export."
                    },
                    "dry_run": {
                        "type": "boolean",
                        "writeOnly": true,
                        "default": false,
                        "description": "Generate report on what would be exported and disk-space required."
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "description": "List of explicit repo-version hrefs to export (replaces current_version)."
                    },
                    "chunk_size": {
                        "type": "string",
                        "writeOnly": true,
                        "description": "Chunk export-tarfile into pieces of chunk_size bytes.Recognizes units of B/KB/MB/GB/TB."
                    },
                    "start_versions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri",
                            "writeOnly": true
                        },
                        "writeOnly": true,
                        "description": "List of explicit last-exported-repo-version hrefs (replaces last_export)."
                    }
                }
            },
            "PulpExportResponse": {
                "type": "object",
                "description": "Serializer for PulpExports.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "A URI of the task that ran the Export."
                    },
                    "exported_resources": {
                        "type": "array",
                        "items": {},
                        "readOnly": true,
                        "description": "Resources that were exported."
                    },
                    "params": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Any additional parameters that were used to create the export."
                    },
                    "output_file_info": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Dictionary of filename: sha256hash entries for export-output-file(s)"
                    }
                }
            },
            "PulpExporter": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "repositories"
                ]
            },
            "PulpExporterResponse": {
                "type": "object",
                "description": "Serializer for pulp exporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system directory to store exported tar.gzs."
                    },
                    "repositories": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        }
                    },
                    "last_export": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Last attempted export for this PulpExporter"
                    }
                },
                "required": [
                    "name",
                    "path",
                    "repositories"
                ]
            },
            "PulpImport": {
                "type": "object",
                "description": "Serializer for call to import into Pulp.",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "Path to export that will be imported."
                    },
                    "toc": {
                        "type": "string",
                        "description": "Path to a table-of-contents file describing chunks to be validated, reassembled, and imported."
                    }
                }
            },
            "PulpImporter": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PulpImporterResponse": {
                "type": "object",
                "description": "Serializer for PulpImporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the Importer."
                    },
                    "repo_mapping": {
                        "type": "object",
                        "description": "Mapping of repo names in an export file to the repo names in Pulp. For example, if the export has a repo named 'foo' and the repo to import content into was 'bar', the mapping would be \"{'foo': 'bar'}\"."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "RecursiveManage": {
                "type": "object",
                "description": "Serializer for adding and removing content to/from a Container repository.",
                "properties": {
                    "content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to operate on."
                    }
                }
            },
            "RepositoryAddRemoveContent": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "add_content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed."
                    },
                    "remove_content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added."
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content will be used as the initial set of content for the new repository version"
                    }
                }
            },
            "RepositorySyncURL": {
                "type": "object",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be synchronized."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    }
                },
                "required": [
                    "remote"
                ]
            },
            "RepositorySyncURLResponse": {
                "type": "object",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be synchronized."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    }
                },
                "required": [
                    "remote"
                ]
            },
            "RepositoryVersion": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    }
                }
            },
            "RepositoryVersionResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "number": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    },
                    "content_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSummaryResponse"
                            }
                        ],
                        "readOnly": true,
                        "description": "Various count summaries of the content in the version and the HREF to view them."
                    }
                }
            },
            "SigningServiceResponse": {
                "type": "object",
                "description": "A serializer for the model declaring a signing service.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name used to recognize a script."
                    },
                    "script": {
                        "type": "string",
                        "description": "An absolute path to a script which is going to be used for the signing."
                    }
                },
                "required": [
                    "name",
                    "script"
                ]
            },
            "TagCopy": {
                "type": "object",
                "description": "Serializer for copying tags from a source repository to a destination repository.",
                "properties": {
                    "source_repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to copy content from."
                    },
                    "source_repository_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository version to copy content from."
                    },
                    "names": {
                        "type": "array",
                        "items": {},
                        "description": "A list of tag names to copy."
                    }
                }
            },
            "TagImage": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with a manifest tagging.",
                "properties": {
                    "tag": {
                        "type": "string",
                        "description": "A tag name"
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 of the Manifest file"
                    }
                },
                "required": [
                    "digest",
                    "tag"
                ]
            },
            "TaskGroupResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the task group."
                    },
                    "all_tasks_dispatched": {
                        "type": "boolean",
                        "description": "Whether all tasks have been spawned for this task group."
                    },
                    "waiting": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of tasks in the 'waiting' state"
                    },
                    "skipped": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of tasks in the 'skipped' state"
                    },
                    "running": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of tasks in the 'running' state"
                    },
                    "completed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of tasks in the 'completed' state"
                    },
                    "canceled": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of tasks in the 'canceled' state"
                    },
                    "failed": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Number of tasks in the 'failed' state"
                    },
                    "group_progress_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GroupProgressReportResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "all_tasks_dispatched",
                    "description"
                ]
            },
            "TaskResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The current state of the task. The possible values include: 'waiting', 'skipped', 'running', 'completed', 'failed' and 'canceled'."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of task."
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the when this task started execution."
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the when this task stopped execution."
                    },
                    "error": {
                        "type": "object",
                        "readOnly": true,
                        "description": "A JSON Object of a fatal error encountered during the execution of this task."
                    },
                    "worker": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The worker associated with this task. This field is empty if a worker is not yet assigned."
                    },
                    "parent_task": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The parent task that spawned this task."
                    },
                    "child_tasks": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Any tasks spawned by this task."
                    },
                    "task_group": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true,
                        "description": "The task group that this task is a member of."
                    },
                    "progress_reports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProgressReportResponse"
                        },
                        "readOnly": true
                    },
                    "created_resources": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "Resources created by this task."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "UnTagImage": {
                "type": "object",
                "description": "A serializer for parsing and validating data associated with a manifest untagging.",
                "properties": {
                    "tag": {
                        "type": "string",
                        "description": "A tag name"
                    }
                },
                "required": [
                    "tag"
                ]
            },
            "Upload": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "size": {
                        "type": "integer",
                        "description": "The size of the upload in bytes."
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UploadChunk": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "A chunk of the uploaded file."
                    },
                    "sha256": {
                        "type": "string",
                        "writeOnly": true,
                        "nullable": true,
                        "description": "The SHA-256 checksum of the chunk if available."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "UploadChunkResponse": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "size": {
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "UploadCommit": {
                "type": "object",
                "properties": {
                    "sha256": {
                        "type": "string",
                        "description": "The expected sha256 checksum for the file."
                    }
                },
                "required": [
                    "sha256"
                ]
            },
            "UploadDetailResponse": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the upload in bytes."
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when upload is committed."
                    },
                    "chunks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadChunkResponse"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "size"
                ]
            },
            "UploadResponse": {
                "type": "object",
                "description": "Serializer for chunked uploads.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the upload in bytes."
                    },
                    "completed": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp when upload is committed."
                    }
                },
                "required": [
                    "size"
                ]
            },
            "WorkerResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the worker."
                    },
                    "last_heartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the last time the worker talked to the service."
                    }
                }
            },
            "container.BlobResponse": {
                "type": "object",
                "description": "Serializer for Blobs.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 of the Blob file"
                    },
                    "media_type": {
                        "type": "string",
                        "description": "Blob media type of the file"
                    }
                },
                "required": [
                    "artifact",
                    "digest",
                    "media_type"
                ]
            },
            "container.ContainerDistribution": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "container.ContainerDistributionResponse": {
                "type": "object",
                "description": "A serializer for ContainerDistribution.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "description": "An optional content-guard. If none is specified, a default one will be used."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "registry_path": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The Registry hostame/name/ to use with docker pull command defined by this distribution."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "container.ContainerPushRepository": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerPushRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Container Push Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerRemote": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "\n        immediate - All manifests and blobs are downloaded and saved during a sync.\n        on_demand - Only tags and manifests are downloaded. Blobs are not\n                    downloaded until they are requested for the first time by a client.\n        streamed - Blobs are streamed to the client with every request and never saved.\n        "
                    },
                    "upstream_name": {
                        "type": "string",
                        "description": "Name of the upstream repository"
                    },
                    "whitelist_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true,
                        "description": "A list of whitelisted tags to sync"
                    }
                },
                "required": [
                    "name",
                    "upstream_name",
                    "url"
                ]
            },
            "container.ContainerRemoteResponse": {
                "type": "object",
                "description": "A Serializer for ContainerRemote.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "\n        immediate - All manifests and blobs are downloaded and saved during a sync.\n        on_demand - Only tags and manifests are downloaded. Blobs are not\n                    downloaded until they are requested for the first time by a client.\n        streamed - Blobs are streamed to the client with every request and never saved.\n        "
                    },
                    "upstream_name": {
                        "type": "string",
                        "description": "Name of the upstream repository"
                    },
                    "whitelist_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true,
                        "description": "A list of whitelisted tags to sync"
                    }
                },
                "required": [
                    "name",
                    "upstream_name",
                    "url"
                ]
            },
            "container.ContainerRepository": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContainerRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Container Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContentRedirectContentGuard": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ContentRedirectContentGuardResponse": {
                "type": "object",
                "description": "A serializer for ContentRedirectContentGuard.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "The unique name."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "container.ManifestResponse": {
                "type": "object",
                "description": "Serializer for Manifests.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "digest": {
                        "type": "string",
                        "description": "sha256 of the Manifest file"
                    },
                    "schema_version": {
                        "type": "integer",
                        "description": "Manifest schema version"
                    },
                    "media_type": {
                        "type": "string",
                        "description": "Manifest media type of the file"
                    },
                    "listed_manifests": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Manifests that are referenced by this Manifest List"
                    },
                    "config_blob": {
                        "type": "string",
                        "format": "uri",
                        "description": "Blob that contains configuration for this Manifest"
                    },
                    "blobs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "Blobs that are referenced by this Manifest"
                    }
                },
                "required": [
                    "artifact",
                    "blobs",
                    "digest",
                    "listed_manifests",
                    "media_type",
                    "schema_version"
                ]
            },
            "container.TagResponse": {
                "type": "object",
                "description": "Serializer for Tags.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "Tag name"
                    },
                    "tagged_manifest": {
                        "type": "string",
                        "format": "uri",
                        "description": "Manifest that is tagged"
                    }
                },
                "required": [
                    "name",
                    "tagged_manifest"
                ]
            },
            "file.FileContent": {
                "type": "object",
                "description": "Serializer for File Content.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "writeOnly": true,
                        "description": "An uploaded file that may be turned into the artifact of the content unit."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "writeOnly": true,
                        "description": "A URI of a repository the new content unit should be associated with."
                    }
                },
                "required": [
                    "relative_path"
                ]
            },
            "file.FileContentResponse": {
                "type": "object",
                "description": "Serializer for File Content.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "relative_path": {
                        "type": "string",
                        "description": "Path where the artifact is located relative to distributions base_path"
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    }
                },
                "required": [
                    "relative_path"
                ]
            },
            "file.FileDistribution": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "file.FileDistributionResponse": {
                "type": "object",
                "description": "Serializer for File Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "base_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL for accessing the publication as defined by this distribution."
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "publication": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "Publication to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "file.FileFilesystemExporter": {
                "type": "object",
                "description": "Serializer for File file system exporters.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system location to export to."
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "file.FileFilesystemExporterResponse": {
                "type": "object",
                "description": "Serializer for File file system exporters.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the file system exporter."
                    },
                    "path": {
                        "type": "string",
                        "description": "File system location to export to."
                    }
                },
                "required": [
                    "name",
                    "path"
                ]
            },
            "file.FilePublication": {
                "type": "object",
                "description": "Serializer for File Publications.",
                "properties": {
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "manifest": {
                        "type": "string",
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                }
            },
            "file.FilePublicationResponse": {
                "type": "object",
                "description": "Serializer for File Publications.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri"
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "description": "A URI of the repository to be published."
                    },
                    "distributions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uri"
                        },
                        "readOnly": true,
                        "description": "This publication is currently hosted as defined by these distributions."
                    },
                    "manifest": {
                        "type": "string",
                        "default": "PULP_MANIFEST",
                        "description": "Filename to use for manifest file containing metadata for all the files."
                    }
                }
            },
            "file.FileRemote": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "file.FileRemoteResponse": {
                "type": "object",
                "description": "Serializer for File Remotes.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content. The possible values include: 'immediate', 'on_demand', and 'streamed'. 'immediate' is the default."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "file.FileRepository": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            },
            "file.FileRepositoryResponse": {
                "type": "object",
                "description": "Serializer for File Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    }
                },
                "required": [
                    "name"
                ]
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "Session"
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:24817/"
        }
    ]
}